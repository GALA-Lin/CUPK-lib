/*********************************************************************
程序名：数组中插入数字
版权：遵从GPL版权协议，可自由使用和传播（请勿上传到收费性网络文库）
作者：anbangli@foxmail.com
日期：2019-07-10 10:39
说明：6-6.假设一个整数数组中按从小到大的顺序存放了一些正整数（例如“2，3，5，8，
10，13，17，20”），后面还有一些元素为空（其值都为0），现输入一个正整数，请将它
插入到数组中合适的位置，并使数组中的所有正整数元素仍然维持从小到大的顺序。
*********************************************************************/
#include <iostream>
using namespace std;

int main() {
    int a[10] = {2, 3, 5, 8, 10, 13, 17, 20};	//共 10个元素，从小到大初始化前8个
    //int a[10] = {20, 17, 13, 10, 8, 5, 3, 2};	//从大到小

    int len = 8;	//数组中已有 8 个元素
    int i, k;	//k 为待插入数字

    cout << "现有数组：\n";
    for (i = 0; i < len; i++)
        cout << a[i] << "  ";

    cout << endl << "请输入一个新数字：";
    cin >> k;

    //把后面的元素往后移，最后把 k 插入到合理位置
    if (a[0] > a[1]) {	//如果原有规律是从大到小
        for (i = len - 1; a[i] < k; i--)	//从后往前，把小于 k 的元素依次往后移
            a[i + 1] = a[i]; 	//依次往后移
    } else {	//如果原有规律是从小到大
        for (i = len - 1; a[i] > k; i--)	//从后往前，把大于 k 的元素依次往后移
            a[i + 1] = a[i]; 	//
    }
    //经过上面的移动之后，i+1 为待插入位置
    a[i + 1] = k;
    len++;  //元素个数增1

    cout << "插入后的数组：\n";
    for (i = 0; i < len; i++)
        cout << a[i] << "  ";

    return 0;
}


