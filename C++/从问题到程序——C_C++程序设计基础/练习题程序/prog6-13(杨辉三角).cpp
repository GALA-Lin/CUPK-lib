/*********************************************************************
程序名：杨辉三角
版权：遵从GPL版权协议，可自由使用和传播（请勿上传到收费性网络文库）
作者：anbangli@foxmail.com
日期：2019-07-22
说明：6-13.杨辉三角（也叫帕斯卡三角）是二项式系数在三角形中的一种几何排列。
前几行如下：
第1行：1
第2行：1  1
第3行：1  2  1
第4行：1  3  3  1
第5行：1  4  6  4  1
....
杨辉三角的特点是：（1）第i行共有i个不为零的元素；（2）每行第1列的元素为1，
从第2行开始，其它列的元素为上一行左上方元素和正上方元素之和。
写一个程序，计算并输出杨辉三角的前面12行。
*********************************************************************/
#include <iostream>
#include <iomanip>
using namespace std;

int main() {
    const int N = 12;	//行数
    int a[N][N] = {0};	//用 N*N 的数组存储非零元素。全部初始化为0。
    int i, j;
    //逐行推导
    for (i = 0; i < N; i++) {
        a[i][0] = 1;  //每行首元素为1
        //从第2行开始，其它列的元素为上一行左上方元素和正上方元素之和。
        for (j = 1; j <= i; j++)
            a[i][j] = a[i - 1][j - 1] + a[i - 1][j];
    }

    //输出数组各元素的值
    cout << N << " 行的杨辉三角：" << endl;
    for (i = 0; i < N; i++) {
        for (j = 0; j <= i; j++) {
            cout << setw(4) << a[i][j];
        }
        cout << endl;
    }

    return 0;
}
